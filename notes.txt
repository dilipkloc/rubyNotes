//string 
.strip //trims the spaces
.upcase //converts to upper case
.downcase //converts to lower case
.length
"dilip".delete("d") #deletes d from the begining string
"dilip".delete_at(1) #deletes i from the string

.include? "" //string find method
ex: ' hi there '.include? "hi" //returns true

//range
"HI there"[0,5] == output>HI th

//index
"hi there".index("h") == output>0 // note it is case sensitive


NUMBERING

//convert TYpE
n = 20
n.to_s  // to string
n.to_i  // to Integer
n.to_f  // to float

n.is_a(String|Integer|Float) //to check the type of the variable

//absolute value
n.abs()  // converting negative to positive * -1
n.round() //rounding off the decimal number
n.ceil() //ceiling
n.floor() //flooring the decimal number

MATH CLASS
Math.sqrt
Math.log

USER INPUT

gets  // takes input but adds \n at the end
gets.chomp //removes the \n at the end


ARRAY
//same as string methods


FOR
a = [1,2,3,4]
for i in a
	p i
end
##############
a.each do |i| 
	p i
end
###############
for i in 0..2
	p i		# 0 1 2 output
end
##############
2.times do |i|
	p i		# 0 1 
end


FILES

f = File.open("file.txt",#open the file in which format read,write or append)
	#read
	f.readchar()
	f.readline()
	f.readlines()

	#write
	f.write("")

f.close()

or

File.open("Filename", which type do i want to open) do |f|
	#read
	f.readchar()
	f.readline()
	f.readlines()

	#write
	f.write("sdsdf") #writes at the current cursor position
	

end




EXCEPTION HANDLING

	begin


	rescue 		#this will catch all the exception#


	end
===========================

	begin

	rescue	ZeroDivisioinError  #this will catch Zerodivision erros	#

	rescue	TypeError  #this will catch accessing out of bound array elements #

	end

===========================
	begin

	rescue	ZeroDivisioinError =>  e     # e variable caught the error and can print e to know the exact errors
	
		p e

	end


CLASSES AND OBJECTS